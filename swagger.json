{
    "openapi": "3.0.0",
    "basePath": "/api/v1",
    "host": "localhost:8080",
    "info": {
        "title": "Condominium API",
        "version": "1.0.0",
        "description": "API para registro de usuários"
    },
    "components": {
        "schemas": {
            "SigninRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User email",
                        "example": "fulano@email.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password",
                        "example": "123456"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "SignupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Fulano"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User email",
                        "example": "fulano@email.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password",
                        "example": "123456"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "RefreshTokenRequest": {
                "type": "object",
                "properties": {
                    "refreshToken": {
                        "type": "string",
                        "description": "User refresh token",
                        "example": "eyJhbGciOiJIUz..."
                    }
                },
                "required": [
                    "refreshToken"
                ]
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error message",
                        "example": "Some error message"
                    }
                },
                "required": [
                    "error"
                ]
            },
            "CredentialsResponse": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "User access token",
                        "example": "eyJhbGciOiJIUz..."
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "User refresh token",
                        "example": "eyJhbGciOiJIUz..."
                    },
                    "expiresIn": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Token expiration time in seconds",
                        "example": 3600
                    }
                },
                "required": [
                    "accessToken",
                    "refreshToken",
                    "expiresIn"
                ]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID do usuário",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                        "type": "string",
                        "description": "Nome do usuário",
                        "example": "Fulano"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Endereço de e-mail do usuário",
                        "example": "fulano@email.com"
                    },
                    "image": {
                        "type": "string",
                        "description": "URL da imagem do usuário",
                        "example": "https://example.com/image.png"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Data e hora de criação do usuário",
                        "example": 1705844988962
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "image",
                    "createdAt"
                ]
            },
            "SignedUserResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserResponse",
                        "description": "User data"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/CredentialsResponse",
                        "description": "User credentials"
                    }
                },
                "required": [
                    "user",
                    "credentials"
                ]
            }
        }
    },
    "paths": {
        "/api/v1/auth/signin": {
            "post": {
                "summary": "Sign in a user",
                "description": "Endpoint to sign in a user.",
                "requestBody": {
                    "description": "User data to sign in",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SigninRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User signed in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignedUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or malformed email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "summary": "Sign up a new user",
                "description": "Endpoint to register a new user.",
                "requestBody": {
                    "description": "User data to register",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignedUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or malformed name, email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refreshToken": {
            "post": {
                "summary": "Refresh token",
                "description": "Endpoint to refresh token.",
                "requestBody": {
                    "description": "Refresh token data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CredentialsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or malformed refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}